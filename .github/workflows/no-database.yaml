#
# Copyright 2018-2022 the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: No Database
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}-${{ github.event.inputs.jhiGenRepo }}-${{ github.event.inputs.jhiGenBranch }}
  cancel-in-progress: true
on:
  workflow_dispatch:
    inputs:
      jhiGenRepo:
        description: 'JHipster repository url'
        default: 'https://github.com/jhipster/generator-jhipster.git'
        required: false
      jhiGenBranch:
        description: 'JHipster repository branch'
        default: 'main'
        required: false
  schedule:
    - cron: '30 2 1 * *'
env:
  JHI_SAMPLES: ${{ github.workspace }}/jhipster-daily-builds/test-integration/samples
jobs:
  applications:
    name: ${{ matrix.app-type }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        app-type:
          - ngx-nodatabase-jwt
          - ngx-nodatabase-oauth2
          - ngx-nodatabase-session
          - ngx-nodatabase-gateway-eureka-oauth2
          - react-nodatabase-jwt-gradle
          - react-nodatabase-oauth2-gradle
          - react-nodatabase-session-gradle
          - gradle-ngx-nodatabase-gateway-consul-jwt
        include:
          - app-type: ngx-nodatabase-jwt
            entity: none
            profile: prod
            war: 0
            e2e: 1
          - app-type: ngx-nodatabase-oauth2
            entity: none
            profile: prod
            war: 0
            e2e: 1
          - app-type: ngx-nodatabase-session
            entity: none
            profile: prod
            war: 0
            e2e: 1
          - app-type: ngx-nodatabase-gateway-eureka-oauth2
            entity: none
            profile: prod
            war: 0
            e2e: 1
          - app-type: react-nodatabase-jwt-gradle
            entity: none
            profile: prod
            war: 0
            e2e: 1
          - app-type: react-nodatabase-oauth2-gradle
            entity: none
            profile: prod
            war: 0
            e2e: 1
          - app-type: react-nodatabase-session-gradle
            entity: none
            profile: prod
            war: 0
            e2e: 1
          - app-type: gradle-ngx-nodatabase-gateway-consul-jwt
            entity: none
            profile: prod
            war: 0
            e2e: 1
    steps:
      #----------------------------------------------------------------------
      # Install all tools and check configuration
      #----------------------------------------------------------------------
      - name: 'SETUP: Checkout jhipster-daily-builds'
        uses: actions/checkout@v3
        with:
          path: jhipster-daily-builds
      - name: 'SETUP: Checkout generator-jhipster'
        uses: actions/checkout@v3
        with:
          repository: 'jhipster/generator-jhipster'
          path: generator-jhipster
          # shows 5 commits at log
          fetch-depth: 5
          ref: main
      - name: 'SETUP: environment'
        id: setup
        uses: ./generator-jhipster/.github/actions/setup
        with:
          entities-sample: ${{ matrix.entity }}
          application-sample: ${{ matrix.app-type }}
          application-environment: ${{ matrix.profile }}
          application-packaging: ${{ (matrix.war == 1 && 'war') || 'jar' }}
          generator-jhipster-repository: ${{ github.event.inputs.jhiGenRepo || 'https://github.com/jhipster/generator-jhipster.git' }}
          generator-jhipster-branch: ${{ github.event.inputs.jhiGenBranch || 'local' }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.setup.outputs.node-version }}
      - name: Download latest chrome binary
        run: |
          sudo apt update
          sudo apt install google-chrome-stable
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ steps.setup.outputs.java-version }}
      - name: 'SETUP: load cache'
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress/
            ~/.m2/repository
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-cache-${{ steps.setup.outputs.date }}-${{ hashFiles('pom.xml', '**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-cache-${{ steps.setup.outputs.date }}-
            ${{ runner.os }}-cache-${{ steps.setup.outputs.date }}
      - name: 'TOOLS: configure tools installed by the system'
        run: $JHI_SCRIPTS/03-system.sh
      - name: 'TOOLS: configure git'
        run: $JHI_SCRIPTS/04-git-config.sh
      - name: 'Copy samples'
        run: cp -R "$JHI_HOME/test-integration/samples/.jhipster" "$JHI_SAMPLES"
      #----------------------------------------------------------------------
      # Install JHipster and generate project+entities
      #----------------------------------------------------------------------
      - name: 'GENERATION: install JHipster'
        run: $JHI_SCRIPTS/10-install-jhipster.sh
      - name: 'GENERATION: config'
        run: $JHI_SCRIPTS/11-generate-config.sh
      - name: 'GENERATION: project'
        run: $JHI_SCRIPTS/12-generate-project.sh
      - name: 'GENERATION: jhipster info'
        run: $JHI_SCRIPTS/14-jhipster-info.sh
      #----------------------------------------------------------------------
      # Launch tests
      #----------------------------------------------------------------------
      - name: 'TESTS: backend'
        run: npm run ci:backend:test
      - name: 'TESTS: frontend'
        run: npm run ci:frontend:test
      - name: 'TESTS: packaging'
        run: npm run ci:e2e:package
      - name: 'TESTS: Deploying with docker-compose file'
        run: npm run ci:e2e:prepare
      - name: 'TESTS: End-to-End (Docker-compose)'
        run: npm run ci:e2e:run --if-present
