#
# Copyright 2018-2022 the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: JDL Eureka Gradle OAuth2
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}-${{ github.event.inputs.jhiGenRepo }}-${{ github.event.inputs.jhiGenBranch }}
  cancel-in-progress: true
on:
  workflow_dispatch:
    inputs:
      jhiGenRepo:
        description: 'JHipster repository url'
        default: 'jhipster/generator-jhipster'
        required: false
      jhiGenBranch:
        description: 'JHipster repository branch'
        default: 'main'
        required: false
  schedule:
    - cron: '45 7 * * *'
jobs:
  applications:
    name: ${{ matrix.app-type }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        app-type:
          - eureka-gradle-oauth2-vue-caffeine
          - eureka-gradle-oauth2-angular-ehcache
          - eureka-gradle-oauth2-react-hazelcast
          - eureka-gradle-oauth2-vue-infinispan
          - eureka-gradle-oauth2-angular-memcached
          - eureka-gradle-oauth2-react-no
          - eureka-gradle-oauth2-vue-redis
        include:
          - app-type: eureka-gradle-oauth2-vue-caffeine
            entity: jdl
            profile: prod
            war: 0
            e2e: 1
          - app-type: eureka-gradle-oauth2-angular-ehcache
            entity: jdl
            profile: prod
            war: 0
            e2e: 1
          - app-type: eureka-gradle-oauth2-react-hazelcast
            entity: jdl
            profile: prod
            war: 0
            e2e: 1
          - app-type: eureka-gradle-oauth2-vue-infinispan
            entity: jdl
            profile: prod
            war: 0
            e2e: 1
          - app-type: eureka-gradle-oauth2-angular-memcached
            entity: jdl
            profile: prod
            war: 0
            e2e: 1
          - app-type: eureka-gradle-oauth2-react-no
            entity: jdl
            profile: prod
            war: 0
            e2e: 1
          - app-type: eureka-gradle-oauth2-vue-redis
            entity: jdl
            profile: prod
            war: 0
            e2e: 1
    steps:
      #----------------------------------------------------------------------
      # Install all tools and check configuration
      #----------------------------------------------------------------------
      - name: 'SETUP: Checkout jhipster-daily-builds'
        uses: actions/checkout@v4
        with:
          path: jhipster-daily-builds
      - name: 'SETUP: Checkout generator-jhipster'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.jhiGenRepo || 'jhipster/generator-jhipster' }}
          path: generator-jhipster
          ref: ${{ github.event.inputs.jhiGenBranch || 'main' }}
      - uses: jhipster/actions/setup-runner@v0
        with:
          node-version: 20
          java-version: 17
          maven-cache: true
          gradle-cache: true
          binary-dir: ${{ github.workspace }}/generator-jhipster/bin
      - name: 'TOOLS: generating jdl-samples'
        run: |
          cd $GITHUB_WORKSPACE/jhipster-daily-builds/test-integration/jdl-samples
          npm i
          npm start
        shell: bash
      - run: cp $GITHUB_WORKSPACE/jhipster-daily-builds/test-integration/jdl-samples/${{ matrix.app-type }}/microservice-demo.jdl .
      #----------------------------------------------------------------------
      # Install JHipster and generate project+entities
      #----------------------------------------------------------------------
      - run: npm ci --ignore-scripts
        working-directory: ${{ github.workspace }}/generator-jhipster
      - uses: jhipster/actions/build-jhipster-bom@v0
        with:
          jhipster-bom-ref: main
      - run: jhipster.cjs jdl *.jdl --default-environment ${{ matrix.profile || 'prod' }} --skip-jhipster-dependencies --skip-checks --no-insight  --workspaces --monorepository
        env:
          JHIPSTER_DEPENDENCIES_VERSION: 0.0.0-CICD
      - run: jhipster.cjs info
      # ----------------------------------------------------------------------
      # Launch tests (Docker-Compose)
      # ----------------------------------------------------------------------
      - run: npm run ci:e2e:package
      - run: npm run ci:e2e:prepare
      - run: npm run ci:e2e:run --if-present
      # ----------------------------------------------------------------------
      # Launch tests (Kubernetes)
      # ----------------------------------------------------------------------
      # - name: Booting Kubernetes in Docker
      #   run: |
      #     echo $KUBECONFIG
      #     kubectl cluster-info
      #     kubectl get pods -n kube-system
      #     kubectl version
      # - name: 'TESTS: Deploying with kubernetes'
      #   run: $JHI_JDL_SCRIPTS/28-deploy-with-kubernetes.sh
      # - name: 'TESTS: Tests End-to-End (Kubernetes)'
      #   run: $JHI_JDL_SCRIPTS/29-tests-e2e-kubernetes.sh
